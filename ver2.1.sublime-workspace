{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fi",
				"file_name"
			],
			[
				"Fi",
				"File"
			],
			[
				"file",
				"file_name"
			],
			[
				"ex",
				"exist?〔function〕"
			],
			[
				"file_",
				"file_name〔variable〕"
			],
			[
				"st",
				"startup"
			],
			[
				"w",
				"when	when …"
			],
			[
				"ret",
				"return〔function〕"
			],
			[
				"com",
				"compile_tle〔function〕"
			],
			[
				"se",
				"select_language"
			],
			[
				"ma",
				"machine_name"
			],
			[
				"C",
				"Car"
			],
			[
				"ge",
				"getAllData〔function〕"
			],
			[
				"get",
				"getQdata〔function〕"
			],
			[
				"al",
				"allowable"
			],
			[
				"ac",
				"action_sec"
			],
			[
				"pr",
				"prob_condi"
			],
			[
				"qu",
				"questino_no"
			],
			[
				"D",
				"Database"
			],
			[
				"ta",
				"table_date"
			],
			[
				"log",
				"$log_path〔variable〕"
			],
			[
				"subm",
				"submit_150421"
			],
			[
				"que",
				"question_num〔variable〕"
			],
			[
				"whi",
				"while〔function〕"
			],
			[
				"json",
				"json_file_path"
			],
			[
				"lo",
				"$log_fh〔variable〕"
			],
			[
				"if",
				"if?	$… = ( … ) ? … : …"
			],
			[
				"tab",
				"$table_name〔variable〕"
			],
			[
				"submi",
				"submit_test"
			],
			[
				"sub",
				"submit"
			],
			[
				"ca",
				"case"
			],
			[
				"print",
				"print_r〔function〕"
			],
			[
				"result",
				"$result_flag〔variable〕"
			],
			[
				"mysql_fe",
				"mysql_fetch_assoc"
			],
			[
				"mysql_err",
				"mysql_error"
			],
			[
				"mysql_e",
				"mysql_error"
			],
			[
				"mys",
				"mysql_"
			],
			[
				"mysq",
				"mysql_"
			],
			[
				"probl",
				"problem_list"
			],
			[
				"time",
				"submit_time"
			],
			[
				"_",
				"_POST"
			],
			[
				"var",
				"var_dump"
			],
			[
				"mb_conver",
				"mb_convert_encoding"
			],
			[
				"compa",
				"compare_file"
			],
			[
				"fiel",
				"file"
			],
			[
				"save",
				"save"
			],
			[
				"re",
				"result"
			],
			[
				"tea",
				"team_name"
			],
			[
				"write",
				"write_data"
			],
			[
				"tem",
				"team_name"
			],
			[
				"te",
				"team_name"
			],
			[
				"rm",
				"rm_command"
			],
			[
				"grep",
				"grep_command"
			],
			[
				"pid",
				"pid_command"
			],
			[
				"Com",
				"compare"
			],
			[
				"read",
				"readlines  (function)"
			],
			[
				"cpm",
				"compare"
			],
			[
				"fla",
				"flag"
			],
			[
				"Fil",
				"File	File.open(\"..\") { |file| .. }"
			],
			[
				"kill",
				"kill_command"
			],
			[
				"gre",
				"grep_command"
			],
			[
				"fil",
				"file_name"
			],
			[
				"mar",
				"margin"
			],
			[
				"margin",
				"margin-left"
			],
			[
				"text",
				"text-align"
			],
			[
				"ty",
				"type	Attr"
			],
			[
				"b",
				"br	<br>"
			],
			[
				"datede",
				"date_default_timezone_set"
			],
			[
				"to",
				"to_i"
			],
			[
				"num",
				"num3"
			],
			[
				"lan",
				"language"
			],
			[
				"in",
				"input_numbers"
			],
			[
				"h",
				"hello_world"
			],
			[
				"he",
				"Hello"
			],
			[
				"oc",
				"occurred"
			],
			[
				"return",
				"returnd"
			],
			[
				"Ar",
				"ArgumentError"
			],
			[
				"p",
				"printf	printf …"
			],
			[
				"U",
				"utf-8"
			],
			[
				"File",
				"File	File.open(\"..\") { |file| .. }"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ver2.2/judge/run.sh",
			"settings":
			{
				"buffer_size": 85,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ver2.2/judge/judge_test.rb",
			"settings":
			{
				"buffer_size": 1715,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/**\n* @file source.cpp\n*\n* @mainpage\n* 本プログラムは、リソースと指定されたJSONファイルを用いてwebサイト(の問題表示部分)を出力するプログラムである。\n*\n* @section 処理の概要\n* 本プログラムは、コマンドライン引数として支持されたJSONファイルの内容をもとにhtmlを作成するために作成された。<br>\n* 入力されるJSONの文法が正しいかをJsonValidatorを用いて検証するので、文法に誤りがあった場合はそこで処理を終了する。<br>\n* また、JsonValidatorはJAVAで書かれているプログラムを使用しているため、本プログラムを実行するにはJAVAの実行環境が必須である。<br>\n* そして、内容の検証が済んだJsonを\"picojson\"というライブラリを用いてパースしながら必要なデータを抽出し、htmlを作成していく。<br>\n* 作成するhtmlのひな形はテンプレートとしてresouresフォルダに格納されており、\n*\n* - problemTemplate.html\n* - listTemplate.html\n* - tableTemplate.html\n*\n* の3つがこれに当たる。<br>\n*\n* @section コンパイル方法\n* 本プログラムのコンパイルは、Visual Studioを用いる場合は通常通りのビルドで可能である。<br>\n* g++でコンパイルする場合は、\"-std=gnu++11\"オプションを指定し、すべてのcppファイルを指定する。<br>\n*\n* @section 実行にあたって\n* 本プログラムでは、入力するJsonファイル名をプログラム起動時のコマンドライン引数として読み込ませる。<br>\n* そして、サンプル入出力の内容が格納されたファイルをプログラムと同一フォルダに配置する。<br>\n* また、起動の際にresourceフォルダ内に以下のファイルが揃っていなければ正常に動作しない。<br>\n* \n* - json-schema-validator-2.2.6-lib.jar\n* - problemTemplate.html\n* - listTemplate.html\n* - tableTemplate.html\n* - schema.json\n*\n* @section 作成されるファイル\n* プログラムが正常に実行されると、プログラムと同一階層に\"problem{日付}.html\"が作成される。<br>\n* そして、\"{日付}\"フォルダが作成され、その中に各問題のhtmlが配置される。\n* \n* @section jsonファイルについて\n* jsonファイルの文法については、付属の\"JSON構文.txt\"及び\"schema.json\"を参照すること。\n*\n* @auther fujihiro_sn\n*/\n\n#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include \"picojson.h\"\n#include \"JsonValidator.h\"\n#include \"StrReplacer.h\"\n#include \"ListHtmlGenerator.h\"\n#include \"ProblemHtmlGenerator.h\"\n\nvoid genListPage(picojson::object contestObj);\nvoid genProblemPage(picojson::object contestObj);\nstd::string genSection(picojson::array section, std::string id, std::string class_);\nstd::string genSamples(picojson::array samples);\n\n\n\nint main(int argc, char *argv[]) {\n\n	using std::cout;\n	using std::cerr;\n	using std::cin;\n	using std::endl;\n\n	if (argc != 2) {\n		cerr << \"invalid argument\" << endl;\n		cerr << \"usage : program.exe [contest json]\" << endl;\n		return 1;\n	}\n	\n	JsonValidator test(\"./resources/schema.json\");\n	\n	test.validation(argv[1]);\n\n	std::string err = test.getError();\n	if (!err.empty()) {\n		cout << test.getError() << endl;\n		cout << test.getErrorList() << endl;\n		return 2;\n	}\n	\n	std::ifstream ifs(argv[1]);\n	picojson::value v;\n\n	if (ifs.fail()) {		//missing file\n		cout << \"cannot open contest json\" << endl;\n		return 1;\n	}\n\n	ifs >> v;\n	std::string perr = picojson::get_last_error();\n	if (!perr.empty()) {	//パース失敗\n		cout << perr << endl;\n		return 1;\n	}\n\n	//ここまでで全データの検証が済んでいるので、これ以降データのチェックは基本行わない\n\n	//コンテストデータのメインオブジェクトを取得\n	picojson::object contestObj = v.get<picojson::object>()[\"contest\"].get<picojson::object>();\n\n	genListPage(contestObj);\n	genProblemPage(contestObj);\n	//cout << v.get<picojson::object>()[\"contest\"].get<picojson::object>()[\"name\"].get<std::string>() << endl;\n	\n	return 0;\n}\n\n/**\n* 日付文字列を作成する\n* @param[in] date 日付情報が格納されたpicojsonオブジェクト\n* @return 日付の文字列\n*/\nstd::string genDate(picojson::object date) {\n	std::stringstream ssm;\n	\n	ssm << date[\"year\"].get<double>() << std::setw(2) << std::setfill('0') << date[\"month\"].get<double>() << std::setw(2) << std::setfill('0') << date[\"day\"].get<double>();\n	return ssm.str();\n}\n\n/**\n* 問題一覧ページを作成する\n* @param[in] contestObj コンテスト情報が格納されたpicojsonオブジェクト\n* @return void\n*/\nvoid genListPage(picojson::object contestObj) {\n\n	ListHtmlGenerator listPage;\n\n	listPage.setTitle(contestObj[\"name\"].get<std::string>());\n	listPage.setDate(genDate(contestObj[\"date\"].get<picojson::object>()));\n\n	picojson::array questions = contestObj[\"question\"].get<picojson::array>();\n	for (size_t i = 0; i < questions.size(); i++) {\n		picojson::object question = questions[i].get<picojson::object>();\n		std::string title = question[\"title\"].get<std::string>();\n		int timeLimit = question[\"time\"].get<double>();\n		int memLimit = question[\"mem\"].get<double>();\n		listPage.addProblemData(title, i + 1, timeLimit, memLimit);\n	}\n\n}\n\n/**\n* 問題ページを作成する\n* @param[in] contestObj コンテスト情報が格納されたpicojsonオブジェクト\n* @return void\n*/\nvoid genProblemPage(picojson::object contestObj) {\n\n	std::string date = genDate(contestObj[\"date\"].get<picojson::object>());\n	\n	system((\"mkdir \" + date).c_str());	//ディレクトリ作成\n\n	picojson::array questions = contestObj[\"question\"].get<picojson::array>();\n\n	//問題数分ループ\n	for (size_t i = 0; i < questions.size(); i++) {\n		ProblemHtmlGenerator problemPage;\n		picojson::object question = questions[i].get<picojson::object>();\n\n		//必要な情報を取得\n		std::string title = question[\"title\"].get<std::string>();\n		int timeLimit = question[\"time\"].get<double>();\n		int memLimit = question[\"mem\"].get<double>();\n\n		//情報を設定していく\n		problemPage.setProblemInfo(title, timeLimit, memLimit);\n		problemPage.setDate(date);\n		problemPage.setProblemNum(i + 1, questions.size());\n\n		problemPage.setStatement(genSection(question[\"statement\"].get<picojson::array>(), \"question\", \"sentence\"));\n		problemPage.setInput(genSection(question[\"input\"].get<picojson::array>(), \"input\", \"sample\"));\n		problemPage.setConstraints(genSection(question[\"constraints\"].get<picojson::array>(), \"constraints\", \"sentence\"));\n		problemPage.setOutput(genSection(question[\"output\"].get<picojson::array>(), \"output\", \"sample\"));\n\n		problemPage.setSample(genSamples(question[\"sample\"].get<picojson::array>()));\n	}\n\n}\n\n/**\n* statementやinputなどの節を作成する\n* @param[in] section セクション部分が格納されたpicojson配列\n* @param[in] id \"input\"か\"output\"か指定(htmlの見た目制御用)(現在は使用していない)\n* @param[in] class_ \"sentence\"か\"sample\"かを指定(htmlの見た目制御用)\n* @return 節のhtml文字列\n*/\nstd::string genSection(picojson::array section, std::string id, std::string class_) {\n	std::stringstream ssm;\n\n	for (auto j = section.begin(); j != section.end(); j++) {\n\n		if (j->is<std::string>()) {		//sentense\n\n			ssm << \"\\t\\t<p class=\\\"sentence\\\">\" << std::endl << \"\\t\\t\\t\" << j->get<std::string>() << std::endl << \"\\t\\t</p>\" << std::endl;\n\n		} else if (j->is<picojson::array>()) {		//array\n\n			std::stringstream sample;\n			for (auto k = j->get<picojson::array>().begin(); k != j->get<picojson::array>().end(); k++) {\n				sample << k->get<std::string>() << \"<br>\";\n			}\n\n			ssm << \"\\t\\t<div class=\\\"\" << class_ << \"\\\">\" << std::endl;\n			ssm << sample.str() << \"</div>\" << std::endl;\n\n		} else if (j->is<picojson::object>()) {	//Image\n			picojson::object& img = j->get<picojson::object>();\n			if (img[\"image\"].is<std::string>()) {\n				std::string imgName = img[\"image\"].get<std::string>();\n				ssm << \"\\t\\t<div class=\\\"image\\\"><img src=\\\"./\" << imgName << \"\\\"></div>\" << std::endl;\n			}\n		}\n\n	}\n	return ssm.str();\n}\n\n/**\n* サンプル部分を作成する関数\n* @param[in] samples サンプル部分が格納されたpicojsonオブジェクト\n* @return サンプル部分のhtml文字列\n*/\nstd::string genSamples(picojson::array samples) {\n	int sCounter = 1;	//サンプルの個数\n\n	std::stringstream ssm;\n	for (auto j = samples.begin(); j != samples.end(); j++, sCounter++) {\n\n		picojson::object& sampleObj = j->get<picojson::object>();\n\n		std::ifstream iifs(sampleObj[\"sampleIn\"].get<std::string>());\n		std::ifstream iofs(sampleObj[\"sampleOut\"].get<std::string>());\n\n		// ファイルが開けなかった場合*2\n		if (iifs.fail()) {\n			std::cerr << std::string(\"cannot open \" + sampleObj[\"sampleIn\"].get<std::string>()) << std::endl;\n			exit(2);\n		}\n		if (iofs.fail()) {\n			std::cerr << std::string(\"cannot open \" + sampleObj[\"sampleOut\"].get<std::string>()) << std::endl;\n			exit(2);\n		}\n		// 2つのイテレータに入出力それぞれのファイル内容を読み込ませる\n		std::istreambuf_iterator<char> iIt(iifs), oIt(iofs);\n		std::istreambuf_iterator<char> ilast, olast;\n		std::string iStr(iIt, ilast), oStr(oIt, olast);\n\n		// 読み込んだサンプル内容をhtmlとして整形していく\n		// sample input\n		ssm << \"\\t\\t<h4>Sample Input \" << sCounter << \"</h4>\" << std::endl;\n		ssm << \"\\t\\t<pre class=\\\"sample\\\">\" << std::endl;\n		ssm << iStr << \"</pre>\" << std::endl;\n		// sample output\n		ssm << \"\\t\\t<h4>Sample Output \" << sCounter << \"</h4>\" << std::endl;\n		ssm << \"\\t\\t<pre class=\\\"sample\\\">\" << std::endl;\n		ssm << oStr << \"</pre>\" << std::endl;\n\n		// 画像が定義されていたら\n		if (sampleObj[\"image\"].is<std::string>()) {\n			std::string fileName = sampleObj[\"image\"].get<std::string>();\n			ssm << \"\\t\\t<div class=\\\"image\\\"><img src=\\\"./\" << fileName << \"\\\"></div>\" << std::endl;\n		}\n\n		//説明文が定義されていたら\n		if (sampleObj[\"string\"].is<std::string>()) {\n			ssm << \"\\t\\t<p class=\\\"sentence\\\">\" << std::endl << \"\\t\\t\\t\" << sampleObj[\"string\"].get<std::string>() << std::endl << \"\\t\\t</p>\" << std::endl;\n		}\n\n\n	}\n	return ssm.str();\n}\n\n",
			"file": "make_problem/source/Source.cpp",
			"file_size": 9516,
			"file_write_time": 130740185120000000,
			"settings":
			{
				"buffer_size": 8226,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"file": "ver2.2/judge/classtest.rb",
			"settings":
			{
				"buffer_size": 274,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ver2.2/judge/upload.php",
			"settings":
			{
				"buffer_size": 1503,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ver2.2/judge/judge.rb",
			"settings":
			{
				"buffer_size": 6365,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ver2.2/sql.sh",
			"settings":
			{
				"buffer_size": 1983,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 147.0,
		"last_filter": "ruby",
		"selected_items":
		[
			[
				"ruby",
				"Set Syntax: Ruby"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"php",
				"Set Syntax: PHP"
			],
			[
				"synta",
				"Set Syntax: C"
			],
			[
				"html",
				"Set Syntax: HTML5"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"syntax php",
				"Set Syntax: PHP"
			],
			[
				"syntac",
				"Set Syntax: C++"
			],
			[
				"syntax c++",
				"Set Syntax: C++"
			],
			[
				"syntax c",
				"Set Syntax: C"
			],
			[
				"ru",
				"Set Syntax: Ruby"
			],
			[
				"javas",
				"Set Syntax: JavaScript"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			]
		],
		"width": 521.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/ver2.2",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/ver2.2/judge"
	],
	"file_history":
	[
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/ver2.2/judge/upload.php",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/ver2.2/judge/uploader_DB.php",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/ver2.2/sql.sh",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/update.php",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/ver2.1/index.html",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/sql.sh",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/ver2.1/judge/parse.rb",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/ver2.1/parse.rb",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/parse.rb",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/ver2.1/judge/upload.php",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/database.php",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/uploder_DB.php",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/database.md",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/procon/source/resources/problemTemplate.html",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/procon/source/resources/listTemplate.html",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/procon/source/problem20150210.html",
		"/Users/natsudama/Desktop/tino.jpg",
		"/Users/natsudama/vagrant/debiantan/xdebiantan22/Vagrantfile_comp",
		"/Users/natsudama/vagrant/debiantan/xdebiantan22/Vagrantfile",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/ver2.1/judge/judge.rb",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/ver2.1/submit_file/aad.java",
		"/Users/natsudama/vagrant/debiantan/xdebiantan22/Vagrantfile.org",
		"/Users/natsudama/vagrant/debiantan/xdebiantan11/Vagrantfile",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.2/ver2.1/problem_list/20150210/problem1.html",
		"/Users/natsudama/Documents/College_current/Kprocon/ver2.1/judge/judge.rb",
		"/Users/natsudama/vagrant/debiantan/xdebiantan11/Vagrantfile.default",
		"/Users/natsudama/vagrant/debiantan/Vagrantfile_state",
		"/Users/natsudama/vagrant/debiantan/Vagrantfile",
		"/Users/natsudama/vagrant/debiantan/Vagrantfile.ORG",
		"/Users/natsudama/vagrant/Vagrantfile",
		"/Applications/XAMPP/xamppfiles/htdocs/judge/update.php",
		"/Users/natsudama/Documents/markdown/20150320/20150320.md",
		"/Users/natsudama/mikutter/Gemfile",
		"/Users/natsudama/Documents/markdown/open_md.sh",
		"/Users/natsudama/Library/Application Support/ownCloud/owncloud.cfg.org",
		"/Users/natsudama/Library/Application Support/ownCloud/owncloud.cfg",
		"/Users/natsudama/Documents/programs_for_study/ruby/class.rb",
		"/Users/natsudama/Library/Application Support/Sublime Text 3/Packages/OmniMarkupPreviewer/Default (OSX).sublime-keymap",
		"/Users/natsudama/Library/Application Support/Sublime Text 3/Packages/User/OmniMarkupPreviewer.sublime-settings",
		"/Users/natsudama/Library/Application Support/Sublime Text 3/Packages/OmniMarkupPreviewer/OmniMarkupPreviewer.sublime-settings",
		"/Users/natsudama/test.md",
		"/Applications/XAMPP/xamppfiles/htdocs/index.html",
		"/Applications/XAMPP/xamppfiles/htdocs/index.php",
		"/Users/natsudama/Library/Application Support/Mou/CSS/Clearness.css",
		"/Users/natsudama/_vimrcc",
		"/Users/natsudama/Documents/College/procon/ver2.1/judge/judge.rb",
		"/Users/natsudama/Documents/College/procon/ver2.1/judge/upload.php",
		"/Users/natsudama/Downloads/20141227.json",
		"/Applications/XAMPP/xamppfiles/htdocs/kawase/index.php",
		"/Users/natsudama/Desktop/kawaserate.php",
		"/Users/natsudama/_vimrc",
		"/Users/natsudama/_vimrcold",
		"/Users/natsudama/Documents/sync/procon/completed/programing-contest-tool-develope/judge/upload.php",
		"/Users/natsudama/Downloads/2014.m3u",
		"/Users/natsudama/Downloads/mpd.conf",
		"/Users/natsudama/ProcLangage/ruby/twitter/twitter_updater.rb",
		"/Users/natsudama/ProcLangage/ruby/twitter/twitter.rb",
		"/Users/natsudama/Documents/sync/procon/test_git/programing-contest-tool-develope.git/judge/upload.php",
		"/Users/natsudama/Documents/sync/procon/test_git/programing-contest-tool-develope.git/judge/judge.rb",
		"/Users/natsudama/Documents/sync/procon/test_git/programing-contest-tool-develope.git/judge/config",
		"/Users/natsudama/Documents/sync/procon/test_git/programing-contest-tool-develope.git/judge/ruby_status/submit_data.log",
		"/Users/natsudama/Documents/sync/procon/test_git/programing-contest-tool-develope.git/judge/ruby_status/result_list.data",
		"/Users/natsudama/Documents/sync/procon/test_git/programing-contest-tool-develope.git/judge/ruby_status/create_result.rb",
		"/Users/natsudama/Documents/sync/procon/test_git/programing-contest-tool-develope.git/stylesheets/screen.css",
		"/Users/natsudama/Downloads/json2html/code/sample.json",
		"/Users/natsudama/Documents/sync/procon/test_git/programing-contest-tool-develope.git/problem_list/20141227/20141124.json",
		"/Users/natsudama/Documents/sync/procon/test_git/programing-contest-tool-develope.git/judge/config_sample",
		"/Users/natsudama/Documents/sync/procon/programing-contest-tool-develope/problem_list/20141129/sampleA_out.txt",
		"/Users/natsudama/Documents/sync/procon/programing-contest-tool-develope/problem_list/20141227/20141227.json",
		"/Users/natsudama/Documents/sync/procon/test_git/programing-contest-tool-develope.git/judge/test.c",
		"/Users/natsudama/Documents/sync/procon/test_git/programing-contest-tool-develope.git/compare_file/1_out_1.txt",
		"/Users/natsudama/Documents/sync/procon/programing-contest-tool-develope/problem_list/20141129/sampleA_in.txt",
		"/Users/natsudama/Documents/sync/procon/programing-contest-tool-develope/judge/judge.rb",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/judge/config",
		"/Users/natsudama/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/judge/config_sample",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/judge/upload.php",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/problem_list/20141227/20141227.json",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/problem_list/20141129/20141129.json",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/problem_list/20141227.json",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/judge/20141227.json",
		"/Applications/XAMPP/xamppfiles/htdocs/Deploy_files/php/20141227.json",
		"/Applications/XAMPP/xamppfiles/htdocs/Deploy_files/php/test.php",
		"/Applications/XAMPP/xamppfiles/htdocs/Deploy_files/php/upload.php",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/judge/ruby_status/cre_result.rb",
		"/Applications/XAMPP/xamppfiles/htdocs/Deploy_files/php/Deploy_files/problem_list/20141227/problem1.html",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/judge/judge.rb",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/judge/remove.rb",
		"/Applications/XAMPP/xamppfiles/htdocs/Deploy_files/php/2014.json",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/submit_file/team1_1_after_action",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/php/ruby_status/format.rb",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/php/judge.rb",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/php/ruby_status/cre_result.rb",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/php/ruby_status/HTMLsource.txt",
		"/Users/natsudama/Documents/sync/procon/git_develops/programing-contest-tool-develope/problem_list/result.html",
		"/Users/natsudama/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Applications/XAMPP/xamppfiles/htdocs/Deploy_files/php/config",
		"/Users/natsudama/Documents/procon/Deploy_files/php/judge.rb",
		"/Users/natsudama/Documents/procon/upload.php",
		"/Users/natsudama/Documents/procon/ruby_status/cre_result.rb",
		"/Applications/XAMPP/xamppfiles/htdocs/php/test file/ruby_status/cre_result.rb",
		"/Applications/XAMPP/xamppfiles/htdocs/php/test file/test.html",
		"/Users/natsudama/Documents/procon/Koding Contest のコピー.html",
		"/Users/natsudama/Documents/procon/Koding Contest.html",
		"/Applications/XAMPP/xamppfiles/htdocs/php/test.cpp",
		"/Applications/XAMPP/xamppfiles/htdocs/php/test file/judge.rb",
		"/Applications/XAMPP/xamppfiles/htdocs/php/test file/config",
		"/Applications/XAMPP/xamppfiles/htdocs/Deploy_files/php/ruby_status/cre_result.rb",
		"/Users/natsudama/Documents/procon/config",
		"/Users/natsudama/server/network ",
		"/Applications/XAMPP/xamppfiles/htdocs/php/config",
		"/Applications/XAMPP/xamppfiles/htdocs/Deploy_files/php/ruby_status/format.rb",
		"/Users/natsudama/test",
		"/Users/natsudama/server/vm",
		"/Applications/XAMPP/xamppfiles/htdocs/php/upload.php",
		"/Users/natsudama/Documents/procon/Deploy_files/php/ruby_status/cre_result.rb",
		"/Applications/XAMPP/xamppfiles/htdocs/php/test file/remove.rb",
		"/Users/natsudama/Documents/deploy_files 変更点",
		"/Applications/XAMPP/xamppfiles/htdocs/php/test1217.php",
		"/Applications/XAMPP/xamppfiles/htdocs/php/test.html",
		"/Users/natsudama/Documents/procon/test.html",
		"/Applications/XAMPP/xamppfiles/htdocs/php/Koding Contest のコピー.html",
		"/Applications/XAMPP/xamppfiles/htdocs/php/スクリーンショット 2014-12-16 13.16.53.png",
		"/Users/natsudama/Documents/procon/clock.js",
		"/Users/natsudama/Downloads/tokyo.json",
		"/Users/natsudama/Documents/procon/remove.rb",
		"/Users/natsudama/Documents/procon/judge.rb",
		"/Users/natsudama/Documents/procon/config_sample"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ps alx",
			"puts",
			"log",
			"#",
			"submit_test",
			"java",
			"file_name",
			"Documents",
			"action_sec",
			"action_time",
			"problem",
			"20141227",
			"rank",
			"gets",
			"rank",
			"compile error",
			"\n ",
			"modal",
			"input",
			"compile",
			"puts",
			"file_name",
			"gets",
			"d4c3",
			"\n	",
			"$dir) { if ($deep > 10) { // 10階層を超過 throw new RuntimeException('Hierarchy is too deep'); } if ($dir === '') { if ($_POST['path'] !== '' && !$i) { // 絶対パスを検知 throw new RuntimeException('Absolute path is not allowed'); } // 空文字列はスキップ continue; } if ($dir === '.') { // 「.」はスキップする conti",
			"low"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ver2.2/judge/run.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 85,
						"regions":
						{
						},
						"selection":
						[
							[
								85,
								85
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"encoding_helper_encoding": "UTF-8",
							"encoding_thread_running": true,
							"origin_encoding": "ASCII",
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "ver2.2/judge/judge_test.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1715,
						"regions":
						{
						},
						"selection":
						[
							[
								1357,
								1357
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"encoding_helper_encoding": "UTF-8",
							"encoding_thread_running": true,
							"origin_encoding": "ASCII",
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 621.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "make_problem/source/Source.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8226,
						"regions":
						{
						},
						"selection":
						[
							[
								1176,
								1176
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"encoding_helper_encoding": "SHIFT_JIS",
							"encoding_thread_running": true,
							"in_converting": true,
							"origin_encoding": "SHIFT_JIS",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3779.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "ver2.2/judge/classtest.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 274,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								237
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"encoding_helper_encoding": "UTF-8",
							"encoding_thread_running": true,
							"origin_encoding": "ASCII",
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "ver2.2/judge/upload.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1503,
						"regions":
						{
						},
						"selection":
						[
							[
								312,
								312
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"encoding_helper_encoding": "UTF-8",
							"encoding_thread_running": true,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "ver2.2/judge/judge.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6365,
						"regions":
						{
						},
						"selection":
						[
							[
								3501,
								3501
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"encoding_helper_encoding": "UTF-8",
							"encoding_thread_running": true,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1517.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "ver2.2/sql.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1983,
						"regions":
						{
						},
						"selection":
						[
							[
								1381,
								1382
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"encoding_helper_encoding": "UTF-8",
							"encoding_thread_running": true,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 133.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ver2.2.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": false,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
