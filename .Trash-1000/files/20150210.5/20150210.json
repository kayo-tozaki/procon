{
    "contest": {
        "name": "chory0 offline contest",
        "date": {
            "year": 2015,
            "month": 2,
            "day": 10
        },
        "start": 17,
        "end": 19,
        "question": [
            {
                "problem": "A",
                "title": "順位",
                "author": "ry0u_yd",
                "time": 2,
                "mem": 65536,
                "numOfTestcase": 3,
                "precision": 0,
                "statement": [
                    " プログラミングコンテストは、制限時間内に解いた問題数を競うコンテストです。また、解いた問題数が同じ場合は早い時間にその問題を解いてほうが上の順位となります。他のコンテストでは間違ったらペナルティがあったり、撃墜などがありますがここではそのようなことは無いこととします。",
                    "　解いた問題数・解いた時間が与えられるのでどちらが上の順位にいるかを出力してください。また同一順位(解いた問題数と解いた時間の両方が同じ)場合は無く、時間は分の単位で与えられるものとする。"
                ],
                "input": [
                    "入力は以下のような形式で与えられる",
                    [
						"<i>N<sub>a</sub></i> <i>N<sub>b</sub></i> <i>T<sub>a</sub></i> <i>T<sub>b</sub></i>"
                    ]
                ],
                "constraints": [
                    "入力は全て整数である。",
					"<i>N<sub>a</sub></i>:Aさんが解いた問題数<br><i>N<sub>b</sub></i>:Bさんが解いた問題数<br><i>T<sub>a</sub></i>:Aさんが解いた時間<br><i>N<sub>a</sub></i>:Bさんが解いた時間"
                ],
                "output": [
                    "Aさんのほうが上の順位の場合は&quot;A&quot;を出力してください。Bさんのほうが上の順位の場合は&quot;B&quot;を出力してください。また、出力の末尾には改行を入れてください。"
                ],
                "sample": [
                    {
                        "sampleIn": "Asample_in_1.txt",
                        "sampleOut": "Asample_out_1.txt"
                    },
                    {
                        "sampleIn": "Asample_in_2.txt",
                        "sampleOut": "Asample_out_2.txt",
                        "string": "9 + (-10) + 11 + (-12) + 13 + (-14) + 15 = 12"
                    }
                ]
            },
            {
                "problem": "B",
                "title": "九九の和",
				"author": "choll",
                "time": 1,
                "mem": 65536,
                "numOfTestcase": 3,
                "precision": 0,
                "statement": [
                    "　今年も工学院小学生は，九九を勉強する季節がやってきました．小学２年生に九九を教えます．小学２年生のおバカなＭ君は歩きながら九九を暗唱し，頑張って覚えようとしていますが，なかなか覚えられません．一方で，同じ通学路で通っている小学１年生の天才Ｒ君は足し算が得意なので，聞こえるもの全ての総和をすぐに計算出来ます。",
                    "Ｍ君が唱えた九九の積（９×９までとは限らない）の総和を瞬時に計算し，Ｒ君の言う総和が正しいかどうか判定するプログラムを作ってください．"
                ],
                "input": [
                    "N"
                ],
                "constraints": [
                    "Ｎは自然数です",
                    "<i>１≦Ｎ＜１００００（10<sup>5</sup>)</i>"
                ],
                "output": [
                    "Ａ",
                    "1×１からn×nまでの積の総和を出力してください．"
                ],
                "sample": [
                    {
                        "sampleIn": "Bsample_in_1.txt",
                        "sampleOut": "Bsample_out_1.txt",
                        "string": "１×１，１×２，１×３，２×１，２×２，２×３，３×１，３×２，３×３の和"
                    },
                    {
                        "sampleIn": "Bsample_in_2.txt",
                        "sampleOut": "Bsample_out_2.txt"
                    },
                    {
                        "sampleIn": "Bsample_in_3.txt",
                        "sampleOut": "Bsample_out_3.txt"
                    }
                ]
            },
            {
                "problem": "C",
                "title": "R君の誕生日",
                "author": "ry0u_yd",
                "time": 2,
                "mem": 65536,
                "numOfTestcase": 5,
                "precision": 0,
                "statement": [
                    " 今日はR君の誕生日です。R君は誕生日にある奇数Nをもらいました。しかしR君はわがままです。奇数ではなく偶数でなければ納得せず、さらにその条件を満たす最大の数でないと泣いてしまうのです。このような数を作り出すためにはある手段が使えます。",
                    " 使える手段:<br>・ある桁iとある桁jを交換することができる<br>・この操作は一度のみ",
                    "　R君が泣いてしまわないようにこの手段を屈指して新たな数を作りましょう。"
                ],
                "input": [
                    "入力は以下のような形式で与えられる",
                    [
                        "<i>N</i>",
                        "<i>F</i> <i>B</i>"
                    ],
                    "<i>M</i>:予算を表す金額<br><i>F</i>:フランクフルトの一本の値段<br><i>B</i>:パン一つの値段<br><i>N</i>:パン1セットの個数"
                ],
                "constraints": [
                    "入力は全て-100から100までの有理数である。<br>小数点以下３桁まで与えられる．"
                ],
                "output": [
				],
                "sample": [
                    {
                        "sampleIn": "Csample_in_1.txt",
                        "sampleOut": "Csample_out_1.txt",
                        "string": "フランクフルトを59本、パンを50個勝ったときのおつりが100円なので100を出力する。"
                    },
                    {
                        "sampleIn": "Csample_in_2.txt",
                        "sampleOut": "Csample_out_2.txt",
                        "string": "フランクフルトを55本、パンを49本勝ったときのおつりが475円であり、これが最低限フランクフルトとパンを買ったときのおつりなので、475を出力する。"
                    },
                    {
                        "sampleIn": "Csample_in_3.txt",
                        "sampleOut": "Csample_out_3.txt"
                    }
                ]
            },
            {
                "problem": "D",
                "title": "フリスビー",
                "author": "choru",
                "time": 2,
                "mem": 65536,
                "numOfTestcase": 3,
                "precision": 0,
                "statement": [
                    "　大学生のＭ君とＲ君は仲良し二人組です．いつも授業が終わるとすぐに大学を飛び出し，公園や遊園地で遊んでいます．今日はxy座標公園にてフリスビーで遊ぶことにしました．せっかくなので，勝負することにしました．勝ち負けは，ある地点からフリスビーを２枚投げ，その落下地点と現在いる地点で囲まれた３角形の面積で競うことにしました．",
                    "　Ｍ君とＲ君がいる地点とフリスビーの落下地点４点が与えられるので，面積の合計を出力するプログラムを作ってください．"
                ],
                "input": [
                    [
                        "<i>X<sub>m</sub>Y<sub>m</sub></i>",
                        "<i>X<sub>f1</sub>Y<sub>f1</sub></i>",
                        "<i>X<sub>f2</sub>Y<sub>f2</sub></i>",
                        "<i>X<sub>r</sub>Y<sub>r</sub></i>",
                        "<i>X<sub>f3</sub>Y<sub>f3</sub></i>",
                        "<i>X<sub>f4</sub>Y<sub>f4</sub></i>"
                    ],
                    "<i>X<sub>m</sub>,Y<sub>m</sub></i>:M君の現在位置（座標）<br><i>X<sub>r</sub>,Y<sub>r</sub></i>:R君の現在位置（座標）<br><i>X<sub>fn</sub></i>,<i>Y<sub>fn</sub></i>:フリスビーｎ枚目の落下地点（座標）<br> 1,2枚目がM君のフリスビー，3,4枚目がR君のフリスビー"
                ],
                "constraints": [
                    "入力は全て-100から100までの有理数である。<br>小数点以下３桁まで与えられる．"
                ],
                "output": [
                    "<i>S<sub>m</sub><br>S<sub>m</sub></i><br>ただし小数点以下４桁まで判定されます．"
                ],
                "sample": [
                    {
                        "sampleIn": "Dsample_in_1.txt",
                        "sampleOut": "Dsample_out_1.txt"
                    },
                    {
                        "sampleIn": "Dsample_in_2.txt",
                        "sampleOut": "Dsample_out_2.txt"
                    },
                    {
                        "sampleIn": "Dsample_in_3.txt",
                        "sampleOut": "Dsample_out_3.txt"
                    }
                ]
            },
            {
                "problem": "E",
				"title": "パイプ工場",
				"author": "ry0u_yd",
                "time": 2,
                "mem": 65516,
                "numOfTestcase": 4,
                "precision": 0,
                "statement": [
                    "　R君の将来の目標は、山梨県のパイプ工場で働くことです。その工場では今、バイトを募集しているそうです。春休みのため、暇を持て余しているR君はバイトに応募してみることにしました。",
                    "　バイトには見事受かり、現在仕事をしている最中です。この工場での仕事はパイプのパーツをつなぎ合わせ、パイプを生産することです。また、給料は日給制のようです。毎日R君は、自分が働いた分の給料を確認しているとあることに気づきました。熱心に頑張った日に貰った給料よりも、適当にやった日に給料が多い時があるのです。どのような給料の計算方法なのか不思議に思ったR君は、M社長に直々に尋ねることにしました。",
					" その結果、給料の計算方法は「パイプの長さの和×パイプの本数」であることが分かりました。この計算方法を知った今は、どのように仕事をすれば給料が多くもらえるが分かります。",
                    "　ツイートの行数Nとツイートの内容Sが与えられるので、その中に含まれるアカウントの数を出力するプログラムを作成してください。"
                ],
                "input": [
                    "入力は以下のような形式で与えられる",
                    [
                        "<i>N</i>",
                        "<i>S<sub>1</sub></i>",
                        "<i>S<sub>2</sub></i>",
                        "...",
                        "<i>S<sub>n</sub></i>"
                    ]
                ],
                "constraints": [
                    [
                        "1≦<i>N</i>≦10",
                        "0≦|<i>S<sub>i</sub></i>|≦1000"
                    ],
                    "(|Si|はi番目の文字列の長さを表します)"
                ],
                "output": [
                    "入力文字列に含まれるTwitterアカウントの数を出力してください。また、出力の末尾には改行を入れてください。"
                ],
                "sample": [
                    {
                        "sampleIn": "Esample_in_1.txt",
                        "sampleOut": "Esample_out_1.txt",
                        "string": "問題作成者のアカウントです。フォローしましょう。"
                    },
                    {
                        "sampleIn": "Esample_in_2.txt",
                        "sampleOut": "Esample_out_2.txt",
                        "string": "@Kogakuinと@Meijiが見つかるはずです。"
                    },
                    {
                        "sampleIn": "Esample_in_3.txt",
                        "sampleOut": "Esample_out_3.txt",
                        "string": "@ueoaのみがアカウントです。文字数の決まりに気を付けましょう。"
                    }
                ]
            }
        ]
    }
}
